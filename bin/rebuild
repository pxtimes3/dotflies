#!/usr/bin/env bash
set -e

bold=$(tput bold)
normal=$(tput sgr0)
DIFF=""
COMMITMSG="$(date --iso-8601=seconds)"
PATHTOFLAKE=~/.config/nixos/

FORCE=false
SYS=false
USR=false
ALL=false

usage() {
	echo -e "${bold}Usage:${normal}"
	echo -e "-f  Force  Processes even if git finds no changes."
	echo -e "-s  System Only rebuild configuration.nix"
	echo -e "-h  User   Only rebuilds home-manager.nix."
	echo -e "-a  All    Rebuilds flake, system & home-manager.\n"
	echo -e "${bold}Ex:${normal} rebuild.sh -fa
    Rebuilds home-manager even if git found no changes.
    This is useful if you've added a new module or whatever,
    just don't forget to add it afterwards!"
	exit 69
}

dosys() {
	echo "Rebuilding! > nixos-rebuild switch --flake .#$(hostname)"
	sudo nixos-rebuild switch --flake ".#$(hostname)" &>>nixos-switch.log
}

dousr() {
	echo "Rebuilding! > home-manager switch --flake .#$(whoami)@$(hostname)"
	home-manager switch --flake ".#$(whoami)@$(hostname)" &>>nixos-switch.log
}

checkflake() {
	if [[ $DIFF =~ flake ]]; then
		echo -e "Updating flake..."
		nix flake update
	elif [[ $FORCE == true ]]; then
		echo -e "Updating flake..."
		nix flake update
	fi
}

sys() {
	checkflake
	if [[ $DIFF =~ configuration\.nix ]]; then
		dosys
	elif [[ $FORCE == true ]]; then
		dosys
	else
		echo -e "Found no changes in configuration.nix"
	fi
}

usr() {
	checkflake
	if [[ $DIFF =~ home\.nix ]]; then
		dousr
	elif [[ $FORCE == true ]]; then
		dousr
	else
		echo -e "Found no changes in home.nix"
	fi
}

gitDiff() {
	if git diff --quiet '*.nix'; then
		echo "Found no changes, exiting."
		popd
		exit 0
	else
		DIFF=$(git diff -U0 '*.nix')
	fi
}

error() {
	cat nixos-switch.log | grep --color error && exit 1
}

while getopts "fsuha" o; do
	case "${o}" in
	f)
		FORCE=true
		;;
	s)
		SYS=true
		;;
	h)
		USR=true
		;;
	a)
		ALL=true
		;;
	*)
		usage
		;;
	esac
done

pushd $PATHTOFLAKE &>/dev/null

if [[ $FORCE != true ]]; then
	# empty log
	echo "" >nixos-switch.log
	gitDiff
else
	echo "" >nixos-switch.log
fi

if [[ $ALL == true ]]; then
	sys || error && usr || error
elif [[ $SYS == true ]]; then
	sys || error
elif [[ $USR == true ]]; then
	usr || error
else
	usage
fi

if [[ ${#DIFF} -gt 0 ]]; then
	git commit -am "$COMMITMSG" # all went OK, add and commit
fi

popd &>/dev/null # return to previous path

echo "Rebuilding OK!" # send happy message to user
echo 'Found the following when looking for "warning":'
cat /home/px/.config/nixos/nixos-switch.log | grep 'warning'

echo 'Rebuild script finished.' >>/home/px/.config/nixos/nixos-switch.log

exit 0
